plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
}

jarJar.setEnabled(true)

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

dependencies {
    jarJar(implementation('org.apache.xmlgraphics:batik-all:1.16'))
    jarJar(implementation('org.apache.xmlgraphics:xmlgraphics-commons:2.7'))
    jarJar(implementation'xml-apis:xml-apis:1.4.01')
    jarJar(implementation('xml-apis:xml-apis-ext:1.3.04'))
    additionalRuntimeClasspath 'org.apache.xmlgraphics:batik-all:1.16'
}

configurations.all {
    exclude group: 'xml-apis', module: 'xml-apis'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }